{"version":3,"sources":["../node_modules/ol/events/Event.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/AssertionError.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Collection.js","../node_modules/ol/has.js","../node_modules/ol/asserts.js","../node_modules/ol/transform.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/math.js","../node_modules/ol/color.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/render/EventType.js","../node_modules/ol/ViewHint.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/string.js","../node_modules/ol/coordinate.js","../node_modules/ol/sphere.js","../node_modules/ol/console.js","../node_modules/ol/proj.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/easing.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/View.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/render/Event.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/render/canvas.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/layer/Group.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileState.js","../node_modules/ol/TileQueue.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/control/defaults.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/Key.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/size.js","../node_modules/ol/Map.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/ImageState.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/Tile.js","../node_modules/ol/ImageBase.js","../node_modules/ol/Image.js","../node_modules/ol/ImageTile.js","../node_modules/ol/reproj/common.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/TileRange.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/TileCache.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/source/Source.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/XYZ.js","../static/src/index.js"],"names":["BaseEvent","type","_classCallCheck","propagationStopped","defaultPrevented","target","_createClass","key","value","stopPropagation","evt","preventDefault","_default","exports","default","PROPERTYCHANGE","Disposable","disposed","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","obj","indexOf","splice","equals","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","func","strict","compare","every","currentVal","res","_array","require","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","_Disposable2","_interopRequireDefault","_Event","_functions","_obj","__esModule","_typeof","Symbol","iterator","constructor","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","Number","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","_getPrototypeOf","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","e","valueOf","getPrototypeOf","Target","_Disposable","_super","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","listener","listeners","listenersForType","includes","push","event","isString","Event","propagate","dispatching","pendingRemovals","ii","handleEvent","pr","removeEventListener","keys","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","originalListener","eventsKey","addEventListener","listenOnce","unlistenByKey","_Target","_EventType","_events","Observable","_EventTarget","EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","dispatchEvent","EventType","len","ol_key","unByKey","abstract","Error","uidCounter_","getUid","ol_uid","VERSION","_Event2","_ObjectEventType","_Observable2","_util","ObjectEvent","oldValue","BaseObject","_Observable","_super2","values","_this2","values_","setProperties","hasOwnProperty","assign","eventType","concat","hasListener","ObjectEventType","silent","notify","set","source","messages","AssertionError","_Error","_wrapNativeSuper","code","message","name","ADD","REMOVE","_AssertionError","_Object","_CollectionEventType","Property","LENGTH","CollectionEvent","element","Collection","_BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","f","get","elem","CollectionEventType","removeAt","insertAt","prev","except","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","window","error","assert","assertion","errorCode","transformStringDiv","_has","_asserts","tmp_","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","setFromArray","coordinate","x","y","rotate","angle","cos","Math","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","composeCssTransform","toString","invert","makeInverse","det","determinant","mat","transformString","join","node","document","createElement","style","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","_Relationship","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","from","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","return","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","createOrUpdate","min","max","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","abs","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","_getRotatedViewport2","getRotatedViewport","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersectionArea","getIntersection","intersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","l","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","clamp","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","m","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","pow","round","ceil","_math","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","fromString","cache","cacheSize","s","fromStringInternal_","asArray","g","exec","hasAlpha","parseInt","substr","startsWith","normalize","split","map","isStringColor","_color","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","iconImage","src","crossOrigin","getKey","maxCacheSize","expire","shared","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","_Property","_get","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","BaseLayer","background_","background","properties","LayerProperty","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","managed","state","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","states","changed","zindex","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","unitByCode","fromCode","METERS_PER_UNIT","_Units","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","tileGrid","_Projection2","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","_Projection","point","cosh","PROJECTIONS","fromEPSG4326","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","replace","add","transforms","destination","sourceCode","getCode","destinationCode","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","s2","n1","n2","_extent","_string","delta","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","geometry","getType","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","levels","info","warn","none","level","setLevel","args","_console","console","_console2","_console3","_epsg","_epsg2","_projections","_transforms","_coordinate","_sphere","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","forEach","projectionLike","getProj","pointResolution","getPointResolutionFunc","getUnits","getMetersPerUnit","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","toLonLat","lonLat","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","transformWithProjections","userProjection","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","upAndDown","transform2D","anchor","anchorX","anchorY","_transform","_extent2","_proj","_transform2","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","getRevision","closestPoint","minSquaredDistance","getClosestPoint","NaN","closestPointXY","computeExtent","isNaN","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","composeTransform","_Geometry2","SimpleGeometry","_Geometry","layout","simplifiedGeometry","getSimplifiedGeometryInternal","getFlatCoordinates","getStrideForLayout","nesting","getLayoutForStride","getStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","simplifyLineString","highQuality","simplifiedFlatCoordinates","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","quantizeArray","quantizeMultiArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","_SimpleGeometry2","_closest","_deflate","_simplify","_inflate","_area","LinearRing","_SimpleGeometry","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","linearRingArea","setLayout","Point","applyProperties","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","_contains","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","_segments","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","_reverse","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","_LinearRing","_Point","_interiorpoint","_intersectsextent","_orient","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","polygon","getOrientedFlatCoordinates","linearRingsArea","flatCenter","getFlatInteriorPoint","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","getLayout","arrayLength","makeRegular","startAngle","_ViewHint","_ViewProperty","_common","_centerconstraint","_resolutionconstraint","_rotationconstraint","_easing","_Polygon","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","newOptions","getProperties","getZoom","getRotation","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","animationCallback","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","hints","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","getUpdatedOptions_","enabled","constrainResolution","getResolutionForExtentInternal","getConstrainedResolution","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","viewState","getState","calculateExtent","nearest","baseLevel","geometryOrExtent","polygonFromExtent","fitInternal","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","rotatedExtentForGeometry","centerRot","centerX","centerY","getConstrainedCenter","position","centerOnInternal","shiftedCenter","deltaCoordinates","setCenter","adjustResolutionInternal","getInteracting","adjustResolution","adjustRotationInternal","newRotation","doNotCancelAnims","forceMoving","newCenter","calculateCenterShift","cancelAnimations","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","multiWorld","isGlobal","centerNone","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","_Base","_EventType2","_View","Layer","_BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","addChangeListener","handleSourcePropertyChange_","setSource","getLayerState","getSource","handleSourceChange_","pixel","getFeatures","getData","view","frameState","layerState","_this3","getMapInternal","getView","layerStatesArray","getLayerGroup","getLayerStatesArray","find","layerExtent","inView","isVisible","getAttributions","attributions","getViewStateAndExtent","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","RenderEventType","some","arrayLayerState","createRenderer","dispose","_IconImageCache","_Layer","MapRenderer","map_","coordinateToPixelTransform","pixelToCoordinateTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","hasRenderer","getWrapX","order","distanceSq","iconImageCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","context","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","createCanvasContext2D","canvasPool","settings","canvas","shift","getContext","releaseCanvas","clearRect","outerWidth","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","_dom","_css","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","interval","referenceWidth","retries","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","getKeys","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","label","_Map","_canvas","CompositeMapRenderer","_MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","getMap","calculateMatrices2D","dispatchRenderEvent","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","renderDeclutter","scheduleExpireIconCache","_Collection","GroupEvent","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","getArray","setLayers","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerChange_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","getLayersArray","pos","ownLayerState","defaultZIndex","MapEvent","_MapEvent2","MapBrowserEvent","_MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_MapBrowserEvent","_MapBrowserEventType","_Target2","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","pointerId","updateActivePointers_","isMouseActionButton_","emulateClick_","button","PointerEvent","doc","getOwnerDocument","handlePointerMove_","handlePointerUp_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","IDLE","LOADING","LOADED","EMPTY","_PriorityQueue2","_interopRequireWildcard","_TileState","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","has","newObj","hasPropertyDescriptor","TileQueue","_PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","TileState","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","_MapEventType","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","_Control2","Attribution","_Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","visibleAttributions","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","collectSourceAttributions_","handleToggle_","classList","toggle","updateElement_","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","animate","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","getConstrainedZoom","_Attribution","_Rotate","_Zoom","defaults","controls","zoomOptions","rotateOptions","attribution","attributionOptions","ACTIVE","Interaction","setActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","_Interaction2","DoubleClickZoom","_Interaction","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","updateTrackedPointers_","handledUp","handled","centroid","all","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","_Pointer","_condition","DragPan","_PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","adjustCenterInternal","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","endInteraction","DragRotate","lastAngle_","getConstraints","RenderBox","geometry_","startPixel_","endPixel_","startPixel","endPixel","top","getOverlayContainer","createOrUpdateGeometry","render_","_Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","getGeometry","setPixels","completeBox","_DragBox2","DragZoom","_DragBox","out_","out","UP","DOWN","_Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","_DoubleClickZoom","_DragPan","_DragRotate","_DragZoom","_KeyboardPan","_KeyboardZoom","_Kinetic","_MouseWheelZoom","_PinchRotate","_PinchZoom","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","num","hasArea","toSize","_Composite","_Group","_MapBrowserEventHandler","_MapProperty","_EventType3","_TileQueue","_defaults","_defaults2","_size","removeLayerMapProperty","setMapInternal","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","control","interaction","getControls","getInteractions","overlay","getOverlays","disconnect","features","forEachFeatureAtPixel","addLayersFrom","layerGroup","hasFeatureAtCoordinate","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","group","renderer","ready","loading","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","getActive","tileQueue","viewHints","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","unobserve","ShadowRoot","host","setSize","getTarget","observe","updateViewportSize_","handleViewPropertyChanged_","handleLayerAdd_","handleLayerRemove_","renderFrame_","handleFontsChanged","previousFrameState","getHints","declutterTree","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","getLoadingOrNotReady","handlePostRender","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","setViewportSize","PRELOAD","USE_INTERIM_TILES_ON_ERROR","_Layer2","_TileProperty","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TileProperty","_ImageState","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","tiles","tileCoord","tileRange","loadedTileCallback","forEachLoadedTile","ImageState","renderIfReadyAndVisible","image","imageState","getLayer","pixelContext","createPixelContext","willReadFrequently","CanvasLayerRenderer","_LayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","getImageData","getBackground","backgroundColor","layerClassName","getClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","setState","ImageBase","_ImageBase2","ImageWrapper","_ImageBase","imageLoadFunction","src_","image_","context_","unlisten_","imageLoadFunction_","unlistenImage_","listenImage","handleImageLoad_","handleImageError_","loadHandler","errorHandler","img","listening","decoding","loaded","catch","_Tile2","_Image","ImageTile","_Tile","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ctx","fillStyle","fillRect","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","brokenDiagonalRendering_","drawTestTriangle","u1","u2","closePath","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","globalCompositeOperation","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","ud","vd","step","steps","strokeStyle","stroke","_Triangulation","_reproj","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","calculateSourceExtent","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","getImage","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","reproject_","TileRange","_ImageTile","_TileRange","CanvasTileLayerRenderer","_CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","tileState","getUseInterimTilesOnError","getTile","getPreload","isDrawableTile","getInterimTile","getRenderSource","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","inTransition","endTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","toTransformString","useContainer","clipUnrotated","getInterpolate","preRender","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","postRender","getTileImage","alpha","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","enqueue","getTileCoordCenter","useTile","updateCacheSize","_BaseTile","_TileLayer","TileLayer","_BaseTileLayer","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","keep","entry","value_","key_","newer","older","containsKey","getKeyZXY","getCacheKeyForTileKey","_tileKey$substring$sp2","substring","lastIndexOf","fromKey","hash","withinExtentAndZ","getFullTileRange","_LRUCache2","_tilecoord","TileCache","_LRUCache","release","peekLast","peekFirstKey","TILELOADSTART","TILELOADEND","TILELOADERROR","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","attributionLike","tmpTileCoord","DECIMALS","TileGrid","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","_TileGrid","getForProjection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","_Source2","_TileCache","_tilegrid","TileSource","_Source","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","getResolutions","scaleSize","TileSourceEvent","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","url","urls","charCode","startCharCode","charCodeAt","stopCharCode","fromCharCode","stop","_TileEventType","_tileurlfunction","UrlTile","_TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","TileEventType","pruneExceptNewestZ","setKey","setTileUrlFunction","_UrlTile2","TileImage","_UrlTile","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","getTileInternal","newTile","refreshInterimChain","createTile_","tilegrid","proj","imageTile","_TileImage2","XYZ","_TileImage","_XYZ","token"],"mappings":"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","file":"src.a61d952e.js","sourceRoot":"..\\templates","sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.4.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","import 'ol/ol.css';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport XYZ from 'ol/source/XYZ'\r\n\r\nlet token = \"pk.eyJ1IjoibXVzaGVyIiwiYSI6ImNsa3JvcHc5ZjF6eXYzZW12ajMzMXd0enQifQ.dZ2685AuaU8GY6wDr11Ipw\"\r\n\r\nconst map = new Map({\r\n    target: 'footprintMap',\r\n    layers: [\r\n        new TileLayer({\r\n            source: new XYZ({\r\n                url: \"https://api.mapbox.com/styles/v1/mapbox/satellite-v9/tiles/256/{z}/{x}/{y}?access_token=\" + token\r\n            })\r\n        })\r\n    ],\r\n    view: new View({\r\n        center: [0, 0],\r\n        zoom: 2\r\n    })\r\n})\r\n"]}